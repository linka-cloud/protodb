// Copyright 2021 Linka Cloud  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: internal/badgerd/replication/raft/pb/raft.proto

package pb

import (
	_ "github.com/alta/protopatch/patch/gopb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Op struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Action:
	//
	//	*Op_New
	//	*Op_Set
	//	*Op_Delete
	//	*Op_Commit
	//	*Op_Discard
	Action        isOp_Action `protobuf_oneof:"action"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Op) Reset() {
	*x = Op{}
	mi := &file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Op) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Op) ProtoMessage() {}

func (x *Op) ProtoReflect() protoreflect.Message {
	mi := &file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Op.ProtoReflect.Descriptor instead.
func (*Op) Descriptor() ([]byte, []int) {
	return file_internal_badgerd_replication_raft_pb_raft_proto_rawDescGZIP(), []int{0}
}

func (x *Op) GetAction() isOp_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *Op) GetNew() *New {
	if x != nil {
		if x, ok := x.Action.(*Op_New); ok {
			return x.New
		}
	}
	return nil
}

func (x *Op) GetSet() *Set {
	if x != nil {
		if x, ok := x.Action.(*Op_Set); ok {
			return x.Set
		}
	}
	return nil
}

func (x *Op) GetDelete() *Delete {
	if x != nil {
		if x, ok := x.Action.(*Op_Delete); ok {
			return x.Delete
		}
	}
	return nil
}

func (x *Op) GetCommit() *Commit {
	if x != nil {
		if x, ok := x.Action.(*Op_Commit); ok {
			return x.Commit
		}
	}
	return nil
}

func (x *Op) GetDiscard() *Discard {
	if x != nil {
		if x, ok := x.Action.(*Op_Discard); ok {
			return x.Discard
		}
	}
	return nil
}

type isOp_Action interface {
	isOp_Action()
}

type Op_New struct {
	New *New `protobuf:"bytes,1,opt,name=new,proto3,oneof"`
}

type Op_Set struct {
	Set *Set `protobuf:"bytes,2,opt,name=set,proto3,oneof"`
}

type Op_Delete struct {
	Delete *Delete `protobuf:"bytes,3,opt,name=delete,proto3,oneof"`
}

type Op_Commit struct {
	Commit *Commit `protobuf:"bytes,4,opt,name=commit,proto3,oneof"`
}

type Op_Discard struct {
	Discard *Discard `protobuf:"bytes,5,opt,name=discard,proto3,oneof"`
}

func (*Op_New) isOp_Action() {}

func (*Op_Set) isOp_Action() {}

func (*Op_Delete) isOp_Action() {}

func (*Op_Commit) isOp_Action() {}

func (*Op_Discard) isOp_Action() {}

type New struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	At            uint64                 `protobuf:"varint,1,opt,name=at,proto3" json:"at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *New) Reset() {
	*x = New{}
	mi := &file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *New) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*New) ProtoMessage() {}

func (x *New) ProtoReflect() protoreflect.Message {
	mi := &file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use New.ProtoReflect.Descriptor instead.
func (*New) Descriptor() ([]byte, []int) {
	return file_internal_badgerd_replication_raft_pb_raft_proto_rawDescGZIP(), []int{1}
}

func (x *New) GetAt() uint64 {
	if x != nil {
		return x.At
	}
	return 0
}

type Set struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	ExpiresAt     uint64                 `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Set) Reset() {
	*x = Set{}
	mi := &file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Set) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Set) ProtoMessage() {}

func (x *Set) ProtoReflect() protoreflect.Message {
	mi := &file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Set.ProtoReflect.Descriptor instead.
func (*Set) Descriptor() ([]byte, []int) {
	return file_internal_badgerd_replication_raft_pb_raft_proto_rawDescGZIP(), []int{2}
}

func (x *Set) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Set) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Set) GetExpiresAt() uint64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type Delete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Delete) Reset() {
	*x = Delete{}
	mi := &file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Delete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delete) ProtoMessage() {}

func (x *Delete) ProtoReflect() protoreflect.Message {
	mi := &file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Delete.ProtoReflect.Descriptor instead.
func (*Delete) Descriptor() ([]byte, []int) {
	return file_internal_badgerd_replication_raft_pb_raft_proto_rawDescGZIP(), []int{3}
}

func (x *Delete) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type Commit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Commit) Reset() {
	*x = Commit{}
	mi := &file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Commit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Commit) ProtoMessage() {}

func (x *Commit) ProtoReflect() protoreflect.Message {
	mi := &file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Commit.ProtoReflect.Descriptor instead.
func (*Commit) Descriptor() ([]byte, []int) {
	return file_internal_badgerd_replication_raft_pb_raft_proto_rawDescGZIP(), []int{4}
}

type Discard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Discard) Reset() {
	*x = Discard{}
	mi := &file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Discard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Discard) ProtoMessage() {}

func (x *Discard) ProtoReflect() protoreflect.Message {
	mi := &file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Discard.ProtoReflect.Descriptor instead.
func (*Discard) Descriptor() ([]byte, []int) {
	return file_internal_badgerd_replication_raft_pb_raft_proto_rawDescGZIP(), []int{5}
}

type Batch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxID          string                 `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Ops           []*Op                  `protobuf:"bytes,2,rep,name=ops,proto3" json:"ops,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Batch) Reset() {
	*x = Batch{}
	mi := &file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Batch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Batch) ProtoMessage() {}

func (x *Batch) ProtoReflect() protoreflect.Message {
	mi := &file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Batch.ProtoReflect.Descriptor instead.
func (*Batch) Descriptor() ([]byte, []int) {
	return file_internal_badgerd_replication_raft_pb_raft_proto_rawDescGZIP(), []int{6}
}

func (x *Batch) GetTxID() string {
	if x != nil {
		return x.TxID
	}
	return ""
}

func (x *Batch) GetOps() []*Op {
	if x != nil {
		return x.Ops
	}
	return nil
}

type Entry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Cmd:
	//
	//	*Entry_Batch
	Cmd           isEntry_Cmd `protobuf_oneof:"cmd"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Entry) Reset() {
	*x = Entry{}
	mi := &file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_internal_badgerd_replication_raft_pb_raft_proto_rawDescGZIP(), []int{7}
}

func (x *Entry) GetCmd() isEntry_Cmd {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *Entry) GetBatch() *Batch {
	if x != nil {
		if x, ok := x.Cmd.(*Entry_Batch); ok {
			return x.Batch
		}
	}
	return nil
}

type isEntry_Cmd interface {
	isEntry_Cmd()
}

type Entry_Batch struct {
	Batch *Batch `protobuf:"bytes,2,opt,name=batch,proto3,oneof"`
}

func (*Entry_Batch) isEntry_Cmd() {}

var File_internal_badgerd_replication_raft_pb_raft_proto protoreflect.FileDescriptor

var file_internal_badgerd_replication_raft_pb_raft_proto_rawDesc = string([]byte{
	0x0a, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x72, 0x64, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x72,
	0x61, 0x66, 0x74, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x2d, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x64, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x61, 0x66, 0x74,
	0x1a, 0x0e, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x94, 0x03, 0x0a, 0x02, 0x4f, 0x70, 0x12, 0x46, 0x0a, 0x03, 0x6e, 0x65, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x72, 0x61, 0x66, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x48, 0x00, 0x52, 0x03, 0x6e, 0x65, 0x77, 0x12,
	0x46, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6c,
	0x69, 0x6e, 0x6b, 0x61, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x64, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x53, 0x65, 0x74,
	0x48, 0x00, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12, 0x4f, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x62, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x4f, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x61,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x62, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x48,
	0x00, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x52, 0x0a, 0x07, 0x64, 0x69, 0x73,
	0x63, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x61, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x62,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x61,
	0x72, 0x64, 0x48, 0x00, 0x52, 0x07, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x42, 0x08, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x15, 0x0a, 0x03, 0x4e, 0x65, 0x77, 0x12, 0x0e,
	0x0a, 0x02, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x61, 0x74, 0x22, 0x4c,
	0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0x1a, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x08, 0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x22, 0x09, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x22, 0x61, 0x0a,
	0x05, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x03, 0x6f,
	0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x61,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x62, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x4f, 0x70, 0x52, 0x03, 0x6f, 0x70, 0x73,
	0x22, 0x5c, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x4c, 0x0a, 0x05, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x61,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x62, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x48, 0x00,
	0x52, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x42, 0x05, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x42, 0x3e,
	0xca, 0xb5, 0x03, 0x02, 0x08, 0x01, 0x5a, 0x36, 0x67, 0x6f, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x61,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x64, 0x62, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x72, 0x61, 0x66, 0x74, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_internal_badgerd_replication_raft_pb_raft_proto_rawDescOnce sync.Once
	file_internal_badgerd_replication_raft_pb_raft_proto_rawDescData []byte
)

func file_internal_badgerd_replication_raft_pb_raft_proto_rawDescGZIP() []byte {
	file_internal_badgerd_replication_raft_pb_raft_proto_rawDescOnce.Do(func() {
		file_internal_badgerd_replication_raft_pb_raft_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_badgerd_replication_raft_pb_raft_proto_rawDesc), len(file_internal_badgerd_replication_raft_pb_raft_proto_rawDesc)))
	})
	return file_internal_badgerd_replication_raft_pb_raft_proto_rawDescData
}

var file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_internal_badgerd_replication_raft_pb_raft_proto_goTypes = []any{
	(*Op)(nil),      // 0: linka.cloud.protodb.internal.replication.raft.Op
	(*New)(nil),     // 1: linka.cloud.protodb.internal.replication.raft.New
	(*Set)(nil),     // 2: linka.cloud.protodb.internal.replication.raft.Set
	(*Delete)(nil),  // 3: linka.cloud.protodb.internal.replication.raft.Delete
	(*Commit)(nil),  // 4: linka.cloud.protodb.internal.replication.raft.Commit
	(*Discard)(nil), // 5: linka.cloud.protodb.internal.replication.raft.Discard
	(*Batch)(nil),   // 6: linka.cloud.protodb.internal.replication.raft.Batch
	(*Entry)(nil),   // 7: linka.cloud.protodb.internal.replication.raft.Entry
}
var file_internal_badgerd_replication_raft_pb_raft_proto_depIdxs = []int32{
	1, // 0: linka.cloud.protodb.internal.replication.raft.Op.new:type_name -> linka.cloud.protodb.internal.replication.raft.New
	2, // 1: linka.cloud.protodb.internal.replication.raft.Op.set:type_name -> linka.cloud.protodb.internal.replication.raft.Set
	3, // 2: linka.cloud.protodb.internal.replication.raft.Op.delete:type_name -> linka.cloud.protodb.internal.replication.raft.Delete
	4, // 3: linka.cloud.protodb.internal.replication.raft.Op.commit:type_name -> linka.cloud.protodb.internal.replication.raft.Commit
	5, // 4: linka.cloud.protodb.internal.replication.raft.Op.discard:type_name -> linka.cloud.protodb.internal.replication.raft.Discard
	0, // 5: linka.cloud.protodb.internal.replication.raft.Batch.ops:type_name -> linka.cloud.protodb.internal.replication.raft.Op
	6, // 6: linka.cloud.protodb.internal.replication.raft.Entry.batch:type_name -> linka.cloud.protodb.internal.replication.raft.Batch
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_internal_badgerd_replication_raft_pb_raft_proto_init() }
func file_internal_badgerd_replication_raft_pb_raft_proto_init() {
	if File_internal_badgerd_replication_raft_pb_raft_proto != nil {
		return
	}
	file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes[0].OneofWrappers = []any{
		(*Op_New)(nil),
		(*Op_Set)(nil),
		(*Op_Delete)(nil),
		(*Op_Commit)(nil),
		(*Op_Discard)(nil),
	}
	file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes[7].OneofWrappers = []any{
		(*Entry_Batch)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_badgerd_replication_raft_pb_raft_proto_rawDesc), len(file_internal_badgerd_replication_raft_pb_raft_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_badgerd_replication_raft_pb_raft_proto_goTypes,
		DependencyIndexes: file_internal_badgerd_replication_raft_pb_raft_proto_depIdxs,
		MessageInfos:      file_internal_badgerd_replication_raft_pb_raft_proto_msgTypes,
	}.Build()
	File_internal_badgerd_replication_raft_pb_raft_proto = out.File
	file_internal_badgerd_replication_raft_pb_raft_proto_goTypes = nil
	file_internal_badgerd_replication_raft_pb_raft_proto_depIdxs = nil
}
