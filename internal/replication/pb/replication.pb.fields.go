// Copyright 2021 Linka Cloud  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-defaults. DO NOT EDIT.

package pb

var ReplicationServiceMethods = struct {
	Init      string
	Replicate string
	Alive     string
	Election  string
}{
	Init:      "/linka.cloud.protodb.internal.replication.ReplicationService/Init",
	Replicate: "/linka.cloud.protodb.internal.replication.ReplicationService/Replicate",
	Alive:     "/linka.cloud.protodb.internal.replication.ReplicationService/Alive",
	Election:  "/linka.cloud.protodb.internal.replication.ReplicationService/Election",
}

var InitRequestFields = struct {
	Since string
}{
	Since: "since",
}

var InitResponseFields = struct {
	Last string
	Data string
}{
	Last: "last",
	Data: "data",
}

var OpFields = struct {
	New    string
	Set    string
	Delete string
	Commit string
}{
	New:    "new",
	Set:    "set",
	Delete: "delete",
	Commit: "commit",
}

var NewFields = struct {
	At string
}{
	At: "at",
}

var SetFields = struct {
	Key       string
	Value     string
	ExpiresAt string
}{
	Key:       "key",
	Value:     "value",
	ExpiresAt: "expires_at",
}

var DeleteFields = struct {
	Key string
}{
	Key: "key",
}

var CommitFields = struct {
	At string
}{
	At: "at",
}

var AckFields = struct {
}{}

var MessageFields = struct {
	Type string
	Name string
	Meta string
}{
	Type: "type",
	Name: "name",
	Meta: "meta",
}

var MetaFields = struct {
	GRPCPort     string
	LocalVersion string
	IsLeader     string
}{
	GRPCPort:     "grpc_port",
	LocalVersion: "local_version",
	IsLeader:     "is_leader",
}
