// Copyright 2021 Linka Cloud  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-defaults. DO NOT EDIT.

package testpb

import (
	"go.linka.cloud/protodb"
	"go.linka.cloud/protodb/typed"
)

type (
	MessageWithKeyOptionStore typed.Store[MessageWithKeyOption, *MessageWithKeyOption]
	MessageWithKeyOptionTx    typed.Tx[MessageWithKeyOption, *MessageWithKeyOption]
	MessageWithKeyOptionEvent typed.Event[MessageWithKeyOption, *MessageWithKeyOption]
)

func NewMessageWithKeyOptionStore(db protodb.Client) MessageWithKeyOptionStore {
	return typed.NewStore[MessageWithKeyOption, *MessageWithKeyOption](db)
}

func NewMessageWithKeyOptionTx(tx protodb.Tx) MessageWithKeyOptionTx {
	return typed.NewTx[MessageWithKeyOption, *MessageWithKeyOption](tx)
}

type (
	InterfaceStore typed.Store[Interface, *Interface]
	InterfaceTx    typed.Tx[Interface, *Interface]
	InterfaceEvent typed.Event[Interface, *Interface]
)

func NewInterfaceStore(db protodb.Client) InterfaceStore {
	return typed.NewStore[Interface, *Interface](db)
}

func NewInterfaceTx(tx protodb.Tx) InterfaceTx {
	return typed.NewTx[Interface, *Interface](tx)
}
