// Copyright 2021 Linka Cloud  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package pb;

option go_package = "go.linka.cloud/protodb/tests/pb;pb";

import "defaults/defaults.proto";
import "patch/go.proto";
import "field_filter.proto";
import "validate/validate.proto";

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/any.proto";

option (go.lint).all = true;


message Interface {
  string name = 1;
  google.protobuf.StringValue mac = 2 [(validate.rules).string = {pattern: "^([0-9A-F]{2}[:-]){5}([0-9A-F]{2})$"}];
  enum Status {
    option (go.enum).name = "InterfaceStatus";
    UNKNOWN = 0 [(go.value).name = "StatusUnknown"];
    UP = 1 [(go.value).name = "StatusUp"];
    DOWN = 2 [(go.value).name = "StatusDown"];
  }
  Status status = 3 [(validate.rules).enum = {defined_only: true}, (defaults.value).enum = 1];
  repeated IPAddress addresses = 4;
  uint32 mtu = 5 [(defaults.value).uint32 = 1500];
}

message IPAddress {
  oneof Address {
    string ipv4 = 3 [(go.field).name = "IPV4", (validate.rules).string.ipv4 = true];
    string ipv6 = 4 [(go.field).name = "IPV6", (validate.rules).string.ipv6 = true];
  }
}
